package main.java.structural.patterns;

import main.java.structural.patterns.bridge.*;
//import main.java.structural.patterns.model.*;
import main.java.structural.patterns.adapter.*;
import main.java.structural.patterns.bridge.*;
import main.java.structural.patterns.composite.*;
import main.java.structural.patterns.flyweight.*;
import main.java.structural.patterns.decorator.*;
import main.java.structural.patterns.model.Customer;
import main.java.structural.patterns.proxy.*;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

/**
 * –ì–æ–ª–æ–≤–Ω–∏–π –∫–ª–∞—Å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω—É –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏–Ω
 * –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∏—Ö —à–∞–±–ª–æ–Ω—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É–≤–∞–Ω–Ω—è
 *
 * @author Student
 * @version 1.0
 */
public class Main {
    public static void main(String[] args) {
        System.out.println("üöó === –Ü–ù–¢–ï–†–ù–ï–¢-–ú–ê–ì–ê–ó–ò–ù –ê–í–¢–û–ó–ê–ü–ß–ê–°–¢–ò–ù ===");
        System.out.println("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω–∏—Ö —à–∞–±–ª–æ–Ω—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É–≤–∞–Ω–Ω—è\n");

        // –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞ —Ä–æ–±–æ—Ç–∞ ‚Ññ4
        demonstrateAdapter();
        System.out.println("\n" + "=".repeat(60) + "\n");
        demonstrateBridge();
        System.out.println("\n" + "=".repeat(60) + "\n");

        // –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞ —Ä–æ–±–æ—Ç–∞ ‚Ññ5
        demonstrateComposite();
        System.out.println("\n" + "=".repeat(60) + "\n");
        demonstrateFlyweight();
        System.out.println("\n" + "=".repeat(60) + "\n");

        // –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω–∞ —Ä–æ–±–æ—Ç–∞ ‚Ññ6
        demonstrateDecorator();
        System.out.println("\n" + "=".repeat(60) + "\n");
        demonstrateProxy();
    }

    /**
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —à–∞–±–ª–æ–Ω—É –ê–¥–∞–ø—Ç–µ—Ä - —ñ–Ω—Ç–µ–≥—Ä–∞—Ü—ñ—è –∑ –∑–∞—Å—Ç–∞—Ä—ñ–ª–æ—é –ø–ª–∞—Ç—ñ–∂–Ω–æ—é —Å–∏—Å—Ç–µ–º–æ—é
     */
    private static void demonstrateAdapter() {
        System.out.println("üí≥ --- –®–ê–ë–õ–û–ù –ê–î–ê–ü–¢–ï–†: –ü–ª–∞—Ç—ñ–∂–Ω–∞ —Å–∏—Å—Ç–µ–º–∞ ---");

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞—Å—Ç–∞—Ä—ñ–ª—É –ø–ª–∞—Ç—ñ–∂–Ω—É —Å–∏—Å—Ç–µ–º—É
        OldPaymentSystem oldSystem = new OldPaymentSystem();

        // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∞–¥–∞–ø—Ç–µ—Ä –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ –Ω–æ–≤–∏–º —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º
        PaymentGateway paymentGateway = new PaymentAdapter(oldSystem);

        // –û–±—Ä–æ–±–ª—è—î–º–æ –ø–ª–∞—Ç—ñ–∂ —á–µ—Ä–µ–∑ –∞–¥–∞–ø—Ç–µ—Ä
        BigDecimal amount = new BigDecimal("1250.50");
        String result = paymentGateway.processPayment(amount, "4532-1234-5678-9012");

        System.out.println("–†–µ–∑—É–ª—å—Ç–∞—Ç: " + result);
    }

    /**
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —à–∞–±–ª–æ–Ω—É –ú—ñ—Å—Ç - —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
     */
    private static void demonstrateBridge() {
        System.out.println("üåâ --- –®–ê–ë–õ–û–ù –ú–Ü–°–¢: –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∞ ---");

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∫–ª—ñ—î–Ω—Ç–∞
        Customer customer = new Customer(1L, "–Ü–≤–∞–Ω –ü–µ—Ç—Ä–µ–Ω–∫–æ", "ivan@email.com",
                "+380501234567", "–≤—É–ª. –•—Ä–µ—â–∞—Ç–∏–∫, 10, –ö–∏—ó–≤");

        // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä—ñ–∑–Ω—ñ —Å–ø–æ—Å–æ–±–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
        DeliveryMethod courier = new CourierDelivery();
        DeliveryMethod post = new PostDelivery();

        // –°—Ç–≤–æ—Ä—é—î–º–æ —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ –∑–∞–º–æ–≤–ª–µ–Ω—å –∑ —Ä—ñ–∑–Ω–∏–º–∏ —Å–ø–æ—Å–æ–±–∞–º–∏ –¥–æ—Å—Ç–∞–≤–∫–∏
        Order regularOrder = new RegularOrder(1001L, customer, new BigDecimal("2500"), courier);
        Order urgentOrder = new UrgentOrder(1002L, customer, new BigDecimal("3200"), post);

        // –û–±—Ä–æ–±–ª—è—î–º–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        regularOrder.processOrder();
        urgentOrder.processOrder();
    }

    /**
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —à–∞–±–ª–æ–Ω—É –ö–æ–º–ø–æ–Ω—É–≤–∞–ª—å–Ω–∏–∫ - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ –≥—Ä—É–ø–∞–º–∏ —Ç–æ–≤–∞—Ä—ñ–≤
     */
    private static void demonstrateComposite() {
        System.out.println("üèóÔ∏è --- –®–ê–ë–õ–û–ù –ö–û–ú–ü–û–ù–£–í–ê–õ–¨–ù–ò–ö: –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ---");

        // –°—Ç–≤–æ—Ä—é—î–º–æ –æ—Å–Ω–æ–≤–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        OrderComponent mainOrder = new OrderGroup("–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è #1003");

        // –°—Ç–≤–æ—Ä—é—î–º–æ –≥—Ä—É–ø–∏ –∑–∞–ø—á–∞—Å—Ç–∏–Ω
        OrderComponent brakeSystem = new OrderGroup("–ì–∞–ª—å–º—ñ–≤–Ω–∞ —Å–∏—Å—Ç–µ–º–∞");
        OrderComponent engineParts = new OrderGroup("–î–µ—Ç–∞–ª—ñ –¥–≤–∏–≥—É–Ω–∞");
        OrderComponent electricalParts = new OrderGroup("–ï–ª–µ–∫—Ç—Ä–∏–∫–∞");

        // –î–æ–¥–∞—î–º–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏ –¥–æ –≥—Ä—É–ø
        brakeSystem.add(new OrderItem("–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏", "BP001", new BigDecimal("850"), 2));
        brakeSystem.add(new OrderItem("–ì–∞–ª—å–º—ñ–≤–Ω—ñ –¥–∏—Å–∫–∏", "BD002", new BigDecimal("1200"), 2));

        engineParts.add(new OrderItem("–ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", "OF003", new BigDecimal("320"), 1));
        engineParts.add(new OrderItem("–ü–æ–≤—ñ—Ç—Ä—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", "AF004", new BigDecimal("280"), 1));
        engineParts.add(new OrderItem("–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è", "SP005", new BigDecimal("180"), 4));

        electricalParts.add(new OrderItem("–ê–∫—É–º—É–ª—è—Ç–æ—Ä", "BT006", new BigDecimal("2500"), 1));
        electricalParts.add(new OrderItem("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä", "GN007", new BigDecimal("3200"), 1));

        // –ë—É–¥—É—î–º–æ —ñ—î—Ä–∞—Ä—Ö—ñ—á–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        mainOrder.add(brakeSystem);
        mainOrder.add(engineParts);
        mainOrder.add(electricalParts);

        // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –ø–æ–≤–Ω—É —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        mainOrder.showDetails("");
        System.out.println("\nüí∞ –ó–ê–ì–ê–õ–¨–ù–ê –í–ê–†–¢–Ü–°–¢–¨ –ó–ê–ú–û–í–õ–ï–ù–ù–Ø: " + mainOrder.calculateTotal() + " –≥—Ä–Ω");
    }

    /**
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —à–∞–±–ª–æ–Ω—É –ü—Ä–∏—Å—Ç–æ—Å—É–≤–∞–Ω–µ—Ü—å - –µ—Ñ–µ–∫—Ç–∏–≤–Ω–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –∫–∞—Ç–∞–ª–æ–≥–æ–º –∑–∞–ø—á–∞—Å—Ç–∏–Ω
     */
    private static void demonstrateFlyweight() {
        System.out.println("ü™∂ --- –®–ê–ë–õ–û–ù –ü–†–ò–°–¢–û–°–£–í–ê–ù–ï–¶–¨: –ö–∞—Ç–∞–ª–æ–≥ –∑–∞–ø—á–∞—Å—Ç–∏–Ω ---");

        System.out.println("–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞—Ç–∞–ª–æ–≥—É –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏–Ω...\n");

        // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–≥–∞—Ç–æ –∑–∞–ø—á–∞—Å—Ç–∏–Ω –∑ –ø–æ–≤—Ç–æ—Ä—é–≤–∞–Ω–∏–º–∏ —Ç–∏–ø–∞–º–∏
        CarPart[] parts = new CarPart[12];

        // –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏ - –±–∞–≥–∞—Ç–æ –∑ –æ–¥–Ω–∞–∫–æ–≤–∏–º–∏ —Ç–∏–ø–∞–º–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—ó –µ–∫–æ–Ω–æ–º—ñ—ó –ø–∞–º'—è—Ç—ñ
        parts[0] = new CarPart("BP001", 10, new BigDecimal("850"),
                CarPartTypeFactory.getCarPartType("–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏", "Bosch", "–ì–∞–ª—å–º–∞"));
        parts[1] = new CarPart("BP002", 15, new BigDecimal("920"),
                CarPartTypeFactory.getCarPartType("–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏", "Bosch", "–ì–∞–ª—å–º–∞"));
        parts[2] = new CarPart("OF001", 25, new BigDecimal("320"),
                CarPartTypeFactory.getCarPartType("–ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", "Mann", "–§—ñ–ª—å—Ç—Ä–∏"));
        parts[3] = new CarPart("OF002", 30, new BigDecimal("280"),
                CarPartTypeFactory.getCarPartType("–ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", "Mann", "–§—ñ–ª—å—Ç—Ä–∏"));
        parts[4] = new CarPart("SP001", 40, new BigDecimal("180"),
                CarPartTypeFactory.getCarPartType("–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è", "NGK", "–ó–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è"));
        parts[5] = new CarPart("SP002", 35, new BigDecimal("200"),
                CarPartTypeFactory.getCarPartType("–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è", "NGK", "–ó–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è"));
        parts[6] = new CarPart("BP003", 8, new BigDecimal("1100"),
                CarPartTypeFactory.getCarPartType("–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏", "Brembo", "–ì–∞–ª—å–º–∞"));
        parts[7] = new CarPart("OF003", 20, new BigDecimal("350"),
                CarPartTypeFactory.getCarPartType("–ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", "Bosch", "–§—ñ–ª—å—Ç—Ä–∏"));
        parts[8] = new CarPart("SP003", 50, new BigDecimal("160"),
                CarPartTypeFactory.getCarPartType("–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è", "Denso", "–ó–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è"));
        parts[9] = new CarPart("BP004", 12, new BigDecimal("880"),
                CarPartTypeFactory.getCarPartType("–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏", "Bosch", "–ì–∞–ª—å–º–∞"));
        parts[10] = new CarPart("OF004", 18, new BigDecimal("310"),
                CarPartTypeFactory.getCarPartType("–ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", "Mann", "–§—ñ–ª—å—Ç—Ä–∏"));
        parts[11] = new CarPart("SP004", 45, new BigDecimal("190"),
                CarPartTypeFactory.getCarPartType("–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è", "NGK", "–ó–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è"));

        System.out.println("\nüì¶ –ö–ê–¢–ê–õ–û–ì –ê–í–¢–û–ó–ê–ü–ß–ê–°–¢–ò–ù:");
        System.out.println("‚îÄ".repeat(80));

        // –í—ñ–¥–æ–±—Ä–∞–∂–∞—î–º–æ –≤—Å—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏
        for (CarPart part : parts) {
            part.displayInfo();
        }

        System.out.println("‚îÄ".repeat(80));
        System.out.println("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:");
        System.out.println("–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–ø—á–∞—Å—Ç–∏–Ω –≤ –∫–∞—Ç–∞–ª–æ–∑—ñ: " + parts.length);
        CarPartTypeFactory.showMemoryStats();
    }

    /**
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —à–∞–±–ª–æ–Ω—É –î–µ–∫–æ—Ä–∞—Ç–æ—Ä - –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
     */
    private static void demonstrateDecorator() {
        System.out.println("üé® --- –®–ê–ë–õ–û–ù –î–ï–ö–û–†–ê–¢–û–†: –î–æ–¥–∞—Ç–∫–æ–≤—ñ –ø–æ—Å–ª—É–≥–∏ ---");

        // –°—Ç–≤–æ—Ä—é—î–º–æ –±–∞–∑–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
        BigDecimal baseAmount = new BigDecimal("2500");
        OrderService order = new BasicOrderService(baseAmount);

        System.out.println("–ü–æ—á–∞—Ç–∫–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:");
        System.out.println("–û–ø–∏—Å: " + order.getServiceDescription());
        System.out.println("–í–∞—Ä—Ç—ñ—Å—Ç—å: " + order.processOrder() + " –≥—Ä–Ω\n");

        // –î–æ–¥–∞—î–º–æ –∑–Ω–∏–∂–∫—É 10%
        order = new DiscountDecorator(order, new BigDecimal("10"));
        System.out.println("–ü—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –∑–Ω–∏–∂–∫–∏:");
        System.out.println("–û–ø–∏—Å: " + order.getServiceDescription());
        System.out.println("–í–∞—Ä—Ç—ñ—Å—Ç—å: " + order.processOrder() + " –≥—Ä–Ω\n");

        // –î–æ–¥–∞—î–º–æ —Ä–æ–∑—à–∏—Ä–µ–Ω—É –≥–∞—Ä–∞–Ω—Ç—ñ—é
        order = new WarrantyDecorator(order);
        System.out.println("–ü—ñ—Å–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è –≥–∞—Ä–∞–Ω—Ç—ñ—ó:");
        System.out.println("–û–ø–∏—Å: " + order.getServiceDescription());
        System.out.println("–í–∞—Ä—Ç—ñ—Å—Ç—å: " + order.processOrder() + " –≥—Ä–Ω\n");

        // –î–æ–¥–∞—î–º–æ –µ–∫—Å–ø—Ä–µ—Å-–¥–æ—Å—Ç–∞–≤–∫—É
        order = new ExpressDeliveryDecorator(order);
        System.out.println("–§—ñ–Ω–∞–ª—å–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —É—Å—ñ–º–∞ –ø–æ—Å–ª—É–≥–∞–º–∏:");
        System.out.println("–û–ø–∏—Å: " + order.getServiceDescription());
        System.out.println("–í–∞—Ä—Ç—ñ—Å—Ç—å: " + order.processOrder() + " –≥—Ä–Ω\n");

        // –°—Ç–≤–æ—Ä—é—î–º–æ —â–µ –æ–¥–Ω–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∑ —ñ–Ω—à–∏–º–∏ –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä–∞–º–∏
        OrderService premiumOrder = new BasicOrderService(new BigDecimal("5000"));
        premiumOrder = new DiscountDecorator(premiumOrder, new BigDecimal("15"));
        premiumOrder = new WarrantyDecorator(premiumOrder);
        premiumOrder = new WarrantyDecorator(premiumOrder); // –ü–æ–¥–≤—ñ–π–Ω–∞ –≥–∞—Ä–∞–Ω—Ç—ñ—è
        premiumOrder = new ExpressDeliveryDecorator(premiumOrder);

        System.out.println("–ü—Ä–µ–º—ñ—É–º –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:");
        System.out.println("–û–ø–∏—Å: " + premiumOrder.getServiceDescription());
        System.out.println("–í–∞—Ä—Ç—ñ—Å—Ç—å: " + premiumOrder.processOrder() + " –≥—Ä–Ω");
    }

    /**
     * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü—ñ—è —à–∞–±–ª–æ–Ω—É –ó–∞—Å—Ç—É–ø–Ω–∏–∫ - –∫–µ—à—É–≤–∞–Ω–Ω—è –∫–∞—Ç–∞–ª–æ–≥—É –∑–∞–ø—á–∞—Å—Ç–∏–Ω
     */
    private static void demonstrateProxy() {
        System.out.println("üõ°Ô∏è --- –®–ê–ë–õ–û–ù –ó–ê–°–¢–£–ü–ù–ò–ö: –ö–∞—Ç–∞–ª–æ–≥ –∑ –∫–µ—à—É–≤–∞–Ω–Ω—è–º ---");

        // –°—Ç–≤–æ—Ä—é—î–º–æ –ø—Ä–æ–∫—Å—ñ –∫–∞—Ç–∞–ª–æ–≥—É
        CarPartCatalog catalog = new CarPartCatalogProxy();

        System.out.println("=== –ü–ï–†–®–ò–ô –ü–û–®–£–ö ===");
        // –ü–µ—Ä—à–∏–π –ø–æ—à—É–∫ - —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —Ä–µ–∞–ª—å–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥ —Ç–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂—É—é—Ç—å—Å—è –¥–∞–Ω—ñ
        List<main.java.structural.patterns.model.CarPart> toyotaParts = catalog.searchByCarBrand("Toyota");
        System.out.println("\n–ó–Ω–∞–π–¥–µ–Ω—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏ –¥–ª—è Toyota:");
        toyotaParts.forEach(System.out::println);

        System.out.println("\n=== –ü–û–í–¢–û–†–ù–ò–ô –ü–û–®–£–ö ===");
        // –ü–æ–≤—Ç–æ—Ä–Ω–∏–π –ø–æ—à—É–∫ - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∫–µ—à
        List<main.java.structural.patterns.model.CarPart> toyotaPartsAgain = catalog.searchByCarBrand("Toyota");
        System.out.println("\n–ü–æ–≤—Ç–æ—Ä–Ω–∏–π –ø–æ—à—É–∫ (–∑ –∫–µ—à—É):");
        toyotaPartsAgain.forEach(System.out::println);

        System.out.println("\n=== –ü–û–®–£–ö –ù–û–í–û–á –ú–ê–†–ö–ò ===");
        // –ü–æ—à—É–∫ —ñ–Ω—à–æ—ó –º–∞—Ä–∫–∏ - –Ω–æ–≤—ñ –¥–∞–Ω—ñ, –∞–ª–µ –∫–∞—Ç–∞–ª–æ–≥ –≤–∂–µ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∏–π
        List<main.java.structural.patterns.model.CarPart> hondaParts = catalog.searchByCarBrand("Honda");
        System.out.println("\n–ó–Ω–∞–π–¥–µ–Ω—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏ –¥–ª—è Honda:");
        hondaParts.forEach(System.out::println);

        System.out.println("\n=== –û–¢–†–ò–ú–ê–ù–ù–Ø –î–ï–¢–ê–õ–ï–ô –ó–ê–ü–ß–ê–°–¢–ò–ù–ò ===");
        // –û—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ—ó –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏
        main.java.structural.patterns.model.CarPart partDetails = catalog.getPartDetails(101L);
        System.out.println("\n–î–µ—Ç–∞–ª—ñ –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏:");
        System.out.println(partDetails);

        System.out.println("\n=== –ü–û–í–¢–û–†–ù–ï –û–¢–†–ò–ú–ê–ù–ù–Ø –î–ï–¢–ê–õ–ï–ô ===");
        // –ü–æ–≤—Ç–æ—Ä–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∏—Ö –∂–µ –¥–µ—Ç–∞–ª–µ–π - –∑ –∫–µ—à—É
        main.java.structural.patterns.model.CarPart partDetailsAgain = catalog.getPartDetails(101L);
        System.out.println("\n–ü–æ–≤—Ç–æ—Ä–Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π (–∑ –∫–µ—à—É):");
        System.out.println(partDetailsAgain);

        System.out.println("\nüí° –ó–∞–≤–¥—è–∫–∏ —à–∞–±–ª–æ–Ω—É –ó–∞—Å—Ç—É–ø–Ω–∏–∫:");
        System.out.println("‚úÖ –†–µ–∞–ª—å–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥ —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è —Ç—ñ–ª—å–∫–∏ –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–≤–µ—Ä–Ω–µ–Ω–Ω—ñ");
        System.out.println("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø–æ—à—É–∫—É –∫–µ—à—É—é—Ç—å—Å—è –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É");
        System.out.println("‚úÖ –ó–º–µ–Ω—à—É—î—Ç—å—Å—è –Ω–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –Ω–∞ –±–∞–∑—É –¥–∞–Ω–∏—Ö");
        System.out.println("‚úÖ –ü–æ–∫—Ä–∞—â—É—î—Ç—å—Å—è –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å —Å–∏—Å—Ç–µ–º–∏");
    }
}
