package main.java.structural.patterns.flyweight;

import java.util.HashMap;
import java.util.Map;

/**
 * –§–∞–±—Ä–∏–∫–∞ –ø—Ä–∏—Å—Ç–æ—Å—É–≤–∞–Ω—Ü—ñ–≤ - —É–ø—Ä–∞–≤–ª—è—î —Ç–∏–ø–∞–º–∏ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏–Ω
 */
public class CarPartTypeFactory {
    private static final Map<String, CarPartType> partTypes = new HashMap<>();

    /**
     * –û—Ç—Ä–∏–º—É—î —Ç–∏–ø –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏ (—Å—Ç–≤–æ—Ä—é—î —è–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î)
     */
    public static CarPartType getCarPartType(String name, String brand, String category) {
        String key = brand + "|" + name + "|" + category;

        if (!partTypes.containsKey(key)) {
            partTypes.put(key, new ConcreteCarPartType(name, brand, category));
        }

        return partTypes.get(key);
    }

    /**
     * –û—Ç—Ä–∏–º—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö —Ç–∏–ø—ñ–≤
     */
    public static int getCreatedTypesCount() {
        return partTypes.size();
    }

    /**
     * –ü–æ–∫–∞–∑—É—î —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–∞–º'—è—Ç—ñ
     */
    public static void showMemoryStats() {
        System.out.println("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–∞–º'—è—Ç—ñ:");
        System.out.println("–£–Ω—ñ–∫–∞–ª—å–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –∑–∞–ø—á–∞—Å—Ç–∏–Ω —Å—Ç–≤–æ—Ä–µ–Ω–æ: " + partTypes.size());
        System.out.println("–ï–∫–æ–Ω–æ–º—ñ—è –ø–∞–º'—è—Ç—ñ –∑–∞–≤–¥—è–∫–∏ Flyweight pattern!");
    }
}
