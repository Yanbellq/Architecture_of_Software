package main.java.structural.patterns.proxy;

import main.java.structural.patterns.model.CarPart;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

/**
 * –†–µ–∞–ª—å–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥ –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏–Ω –∑ –≤–∞–∂–∫–∏–º–∏ –æ–ø–µ—Ä–∞—Ü—ñ—è–º–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
 */
public class RealCarPartCatalog implements CarPartCatalog {

    public RealCarPartCatalog() {
        // –°–∏–º—É–ª—è—Ü—ñ—è –≤–∞–∂–∫–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–∞–ª–æ–≥—É
        loadCatalogFromDatabase();
    }

    private void loadCatalogFromDatabase() {
        System.out.println("üîÑ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∫–∞—Ç–∞–ª–æ–≥—É –∞–≤—Ç–æ–∑–∞–ø—á–∞—Å—Ç–∏–Ω –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö...");
        try {
            Thread.sleep(2000); // –°–∏–º—É–ª—è—Ü—ñ—è –≤–∞–∂–∫–æ—ó –æ–ø–µ—Ä–∞—Ü—ñ—ó
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }
        System.out.println("‚úÖ –ö–∞—Ç–∞–ª–æ–≥ —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö");
    }

    @Override
    public List<CarPart> searchByCarBrand(String carBrand) {
        System.out.println("üîç –ü–æ—à—É–∫ –∑–∞–ø—á–∞—Å—Ç–∏–Ω –¥–ª—è –º–∞—Ä–∫–∏: " + carBrand);

        // –°–∏–º—É–ª—è—Ü—ñ—è –ø–æ—à—É–∫—É –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö
        List<CarPart> results = new ArrayList<>();
        results.add(new CarPart(1L, "–ì–∞–ª—å–º—ñ–≤–Ω—ñ –∫–æ–ª–æ–¥–∫–∏", "Bosch", carBrand,
                "BP001", new BigDecimal("850"), 15));
        results.add(new CarPart(2L, "–ú–∞—Å–ª—è–Ω–∏–π —Ñ—ñ–ª—å—Ç—Ä", "Mann", carBrand,
                "OF002", new BigDecimal("320"), 25));
        results.add(new CarPart(3L, "–°–≤—ñ—á–∫–∏ –∑–∞–ø–∞–ª—é–≤–∞–Ω–Ω—è", "NGK", carBrand,
                "SP003", new BigDecimal("180"), 40));

        System.out.println("–ó–Ω–∞–π–¥–µ–Ω–æ " + results.size() + " –∑–∞–ø—á–∞—Å—Ç–∏–Ω");
        return results;
    }

    @Override
    public CarPart getPartDetails(Long partId) {
        System.out.println("üìã –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –¥–µ—Ç–∞–ª–µ–π –∑–∞–ø—á–∞—Å—Ç–∏–Ω–∏ ID: " + partId);

        // –°–∏–º—É–ª—è—Ü—ñ—è –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑ –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
        try {
            Thread.sleep(500);
        } catch (InterruptedException e) {
            Thread.currentThread().interrupt();
        }

        return new CarPart(partId, "–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä –ø–µ—Ä–µ–¥–Ω—ñ–π", "KYB", "Toyota",
                "AM" + partId, new BigDecimal("1250"), 8);
    }
}
