package main.java.structural.patterns.composite;

import java.math.BigDecimal;

/**
 * –õ–∏—Å—Ç–∫–æ–≤–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç - –æ–¥–∏–Ω–∏—á–Ω–∏–π —Ç–æ–≤–∞—Ä —É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—ñ
 */
public class OrderItem extends OrderComponent {
    private String partNumber;
    private BigDecimal unitPrice;
    private Integer quantity;

    public OrderItem(String name, String partNumber, BigDecimal unitPrice, Integer quantity) {
        super(name);
        this.partNumber = partNumber;
        this.unitPrice = unitPrice;
        this.quantity = quantity;
    }

    @Override
    public void showDetails(String indent) {
        BigDecimal total = unitPrice.multiply(new BigDecimal(quantity));
        System.out.println(String.format("%süîß %s (‚Ññ%s) - %d —à—Ç. √ó %s –≥—Ä–Ω = %s –≥—Ä–Ω",
                indent, name, partNumber, quantity, unitPrice, total));
    }

    @Override
    public BigDecimal calculateTotal() {
        return unitPrice.multiply(new BigDecimal(quantity));
    }
}
